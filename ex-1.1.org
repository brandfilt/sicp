#+TITLE: ex-1.1

#+BEGIN_SRC elisp :exports both
10
#+END_SRC

#+RESULTS:
: 10

#+begin_src elisp :exports both
(+ 5 3 4)
#+end_src

#+RESULTS:
: 12

#+begin_src elisp :exports both
(- 9 1)
#+end_src

#+RESULTS:
: 8

#+begin_src elisp :exports both
(/ 6 2)
#+end_src

#+RESULTS:
: 3

#+begin_src elisp :exports both
(+ (* 2 4) (- 4 6))
#+end_src

#+RESULTS:
: 6

#+begin_src scheme :exports both
(define a 3)
(define b (+ a 1))
(+ a b (* a b))
#+end_src

#+RESULTS:
: 19

#+begin_src scheme :exports both
(= a b)
#+end_src

#+RESULTS:
: #f

#+begin_src scheme :exports both
(if (and (> b a) (< b (* a b)))
    b
    a)
#+end_src

#+RESULTS:
: b

#+begin_src scheme :exports both
(cond ((= a 4) 6)
      ((= b 4) (+ 6 7 a))
      (else 25))
#+end_src

#+RESULTS:

#+begin_src scheme :exports both
(cond ((= a 4) 6)
      ((= b 4) (+ 6 7 a))
      (else 25))
#+end_src

#+RESULTS:
: 16

#+begin_src scheme :exports both
(+ 2 (if (> b a) b a))
#+end_src

#+RESULTS:
: 5

#+begin_src scheme :exports both
(* (cond ((> b a) a)
         ((< a b) b)
         (else -1))
   (+ a 1))

#+end_src

#+RESULTS:
: 16
